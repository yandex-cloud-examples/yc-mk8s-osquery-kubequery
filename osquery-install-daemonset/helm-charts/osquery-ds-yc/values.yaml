# Default values for osquery-ds-yc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: cr.yandex/crpjfmfou6gflobbfvfv/osquery-ds
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "mvp"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

osqueryArgs: --verbose --disable_events=false --enable_file_events=true --disable_audit=false --audit_allow_config=true --audit_persist=true --audit_allow_process_events=true

osqueryConfig:
  osquery.example.conf: |
    {
      // Configure the daemon below:
      "options": {
        // Select the osquery config plugin.
        "config_plugin": "filesystem",

        // Select the osquery logging plugin.
        "logger_plugin": "filesystem",

        // The log directory stores info, warning, and errors.
        // If the daemon uses the 'filesystem' logging retriever then the log_dir
        // will also contain the query results.
        //"logger_path": "/var/log/osquery",

        // Set 'disable_logging' to true to prevent writing any info, warning, error
        // logs. If a logging plugin is selected it will still write query results.
        //"disable_logging": "false",

        // Splay the scheduled interval for queries.
        // This is very helpful to prevent system performance impact when scheduling
        // large numbers of queries that run a smaller or similar intervals.
        //"schedule_splay_percent": "10",

        // A filesystem path for disk-based backing storage used for events and
        // query results differentials. See also 'use_in_memory_database'.
        //"database_path": "/var/osquery/osquery.db",

        // Comma-delimited list of table names to be disabled.
        // This allows osquery to be launched without certain tables.
        //"disable_tables": "foo_bar,time",

        // Comma-delimited list of table names to be enabled.
        // This allows osquery to be launched with certain tables only.
        //"enable_tables": "foo_bar,time",

        "utc": "true"
      },

      // Define a schedule of queries:
      "schedule": {
        // This is a simple example query that outputs basic system information.
        "proccess_info": {
          "query": "SELECT * FROM process_events;",
          // The interval in seconds to run this query, not an exact interval.
          "interval": 20
        }
      },

      // Decorators are normal queries that append data to every query.
      //"decorators": {
      //  "load": [
      //    "SELECT uuid AS host_uuid FROM system_info;",
       //   "SELECT user AS username FROM logged_in_users ORDER BY time DESC LIMIT 1;"
        //]
      //},

      // Add default osquery packs or install your own.
      //
      // There are several 'default' packs installed via
      // packages and/or Homebrew.
      //
      // Linux:        /opt/osquery/share/osquery/packs
      // OS X:         /var/osquery/packs
      // Homebrew:     /usr/local/share/osquery/packs
      // make install: {PREFIX}/share/osquery/packs
      //
      "packs": {
        "fim": "/opt/osquery/share/osquery/packs/fim.conf",
        // "osquery-monitoring": "/opt/osquery/share/osquery/packs/osquery-monitoring.conf",
        "incident-response": "/opt/osquery/share/osquery/packs/incident-response.conf",
        // "it-compliance": "/opt/osquery/share/osquery/packs/it-compliance.conf",
        // "osx-attacks": "/var/osquery/packs/osx-attacks.conf",
        "vuln-management": "/opt/osquery/share/osquery/packs/vuln-management.conf"
        // "hardware-monitoring": "/opt/osquery/share/osquery/packs/hardware-monitoring.conf",
        // "ossec-rootkit": "/opt/osquery/share/osquery/packs/ossec-rootkit.conf",
        // "windows-hardening": "C:\\Program Files\\osquery\\packs\\windows-hardening.conf",
        // "windows-attacks": "C:\\Program Files\\osquery\\packs\\windows-attacks.conf"
      },

      // Provides feature vectors for osquery to leverage in simple statistical 
      // analysis of results data. 
      //
      // Currently this configuration is only used by Windows in the Powershell
      // Events table, wherein character_frequencies is a list of doubles 
      // representing the aggregate occurrence of character values in Powershell 
      // Scripts. A default configuration is provided which was adapated from 
      // Lee Holmes cobbr project: 
      // https://gist.github.com/cobbr/acbe5cc7a186726d4e309070187beee6
      // 
      "feature_vectors": {
        "character_frequencies": [
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.00045,  0.01798,
          0.0,      0.03111,  0.00063,  0.00027,   0.0,      0.01336,  0.0133,
          0.00128,  0.0027,   0.00655,  0.01932,   0.01917,  0.00432,  0.0045,
          0.00316,  0.00245,  0.00133,  0.001029,  0.00114,  0.000869, 0.00067,
          0.000759, 0.00061,  0.00483,  0.0023,    0.00185,  0.01342,  0.00196,
          0.00035,  0.00092,  0.027875, 0.007465,  0.016265, 0.013995, 0.0490895,
          0.00848,  0.00771,  0.00737,  0.025615,  0.001725, 0.002265, 0.017875,
          0.016005, 0.02533,  0.025295, 0.014375,  0.00109,  0.02732,  0.02658,
          0.037355, 0.011575, 0.00451,  0.005865,  0.003255, 0.005965, 0.00077,
          0.00621,  0.00222,  0.0062,   0.0,       0.00538,  0.00122,  0.027875,
          0.007465, 0.016265, 0.013995, 0.0490895, 0.00848,  0.00771,  0.00737,
          0.025615, 0.001725, 0.002265, 0.017875,  0.016005, 0.02533,  0.025295,
          0.014375, 0.00109,  0.02732,  0.02658,   0.037355, 0.011575, 0.00451,
          0.005865, 0.003255, 0.005965, 0.00077,   0.00771,  0.002379, 0.00766,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0,      0.0,       0.0,      0.0,      0.0,
          0.0,      0.0,      0.0
        ]
      }    
    }

osqueryPacks:
  vuln-management.conf: |
    {
      "queries": {
        "kernel_info": {
          "query" : "select * from kernel_info;",
          "interval" : "300",
          "version" : "1.4.5",
          "description" : "Retrieves information from the current kernel in the target system.",
          "value" : "Kernel version can tell you vulnerabilities based on the version"
        },
        "os_version": {
          "query" : "select * from os_version;",
          "interval" : "300",
          "version" : "1.4.5",
          "description" : "Retrieves the current version of the running osquery in the target system and where the configuration was loaded from.",
          "value" : "OS version will tell which distribution the OS is running on, allowing to detect the main distribution"
        },
        "kernel_modules": {
          "query" : "select * from kernel_modules;",
          "interval" : "300",
          "platform" : "linux",
          "version" : "1.4.5",
          "description" : "Retrieves all the information for the current kernel modules in the target Linux system.",
          "value" : "Only for Linux.  It may pinpoint inserted modules that can carry malicious payloads."
        },
        "deb_packages": {
          "query" : "select * from deb_packages;",
          "interval" : "300",
          "platform" : "linux",
          "version" : "1.4.5",
          "description" : "Retrieves all the installed DEB packages in the target Linux system.",
          "value" : "This, with the help of vulnerability feed, can help tell if a vulnerable application is installed."
        },
        "apt_sources": {
          "query" : "select * from apt_sources;",
          "interval" : "300",
          "platform" : "linux",
          "version" : "1.4.5",
          "description" : "Retrieves all the APT sources to install packages from in the target Linux system.",
          "value" : "In the future this may not have a lot of value as we expect to have installed only signed packages"
        },
        "portage_packages": {
          "query" : "select * from portage_packages;",
          "interval" : "300",
          "platform" : "linux",
          "version" : "2.0.0",
          "description" : "Retrieves all the installed packages on the target Linux system.",
          "value" : "This, with the help of vulnerability feed, can help tell if a vulnerable application is installed."
        },
        "rpm_packages": {
          "query" : "select * from rpm_packages;",
          "interval" : "300",
          "platform" : "linux",
          "version" : "1.4.5",
          "description" : "Retrieves all the installed RPM packages in the target Linux system.",
          "value" : "This, with the help of vulnerability feed, can help tell if a vulnerable application is installed."
        },
        "backdoored_python_packages": {
          "query" : "select name as package_name, version as package_version, path as package_path from python_packages where package_name = 'acqusition' or package_name = 'apidev-coop' or package_name = 'bzip' or package_name = 'crypt' or package_name = 'django-server' or package_name = 'pwd' or package_name = 'setup-tools' or package_name = 'telnet' or package_name = 'urlib3' or package_name = 'urllib';",
          "interval" : "300",
          "platform" : "posix",
          "version" : "1.4.5",
          "description" : "Watches for the backdoored Python packages installed on system. See (http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/index.html)",
          "value" : "Gives some assurances that no bad Python packages are installed on the system."
        }
      }
    }
  incident-response.conf: |
    {
      "queries": {
        "launchd": {
          "query" : "select * from launchd;",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves all the daemons that will run in the start of the target OSX system.",
          "value" : "Identify malware that uses this persistence mechanism to launch at system boot"
        },
        "startup_items": {
          "query" : "select * from startup_items;",
          "interval" : "86400",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieve all the items that will load when the target OSX system starts.",
          "value" : "Identify malware that uses this persistence mechanism to launch at a given interval"
        },
        "crontab": {
          "query" : "select * from crontab;",
          "interval" : "300",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves all the jobs scheduled in crontab in the target system.",
          "value" : "Identify malware that uses this persistence mechanism to launch at a given interval"
        },
        "loginwindow1": {
          "query" : "select key, subkey, value from plist where path = '/Library/Preferences/com.apple.loginwindow.plist';",
          "interval" : "86400",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves all the values for the loginwindow process in the target OSX system.",
          "value" : "Identify malware that uses this persistence mechanism to launch at system boot"
        },
        "loginwindow2": {
          "query" : "select key, subkey, value from plist where path = '/Library/Preferences/loginwindow.plist';",
          "interval" : "86400",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves all the values for the loginwindow process in the target OSX system.",
          "value" : "Identify malware that uses this persistence mechanism to launch at system boot"
        },
        "loginwindow3": {
          "query" : "select username, key, subkey, value from plist p, (select * from users where directory like '/Users/%') u where p.path = u.directory || '/Library/Preferences/com.apple.loginwindow.plist';",
          "interval" : "86400",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves all the values for the loginwindow process in the target OSX system.",
          "value" : "Identify malware that uses this persistence mechanism to launch at system boot"
        },
        "loginwindow4": {
          "query" : "select username, key, subkey, value from plist p, (select * from users where directory like '/Users/%') u where p.path = u.directory || '/Library/Preferences/loginwindow.plist';",
          "interval" : "86400",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves all the values for the loginwindow process in the target OSX system.",
          "value" : "Identify malware that uses this persistence mechanism to launch at system boot"
        },
        "alf": {
          "query" : "select * from alf;",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves the configuration values for the Application Layer Firewall for OSX.",
          "value" : "Verify firewall settings are as restrictive as you need. Identify unwanted firewall holes made by malware or humans"
        },
        "alf_exceptions": {
          "query" : "select * from alf_exceptions;",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves the exceptions for the Application Layer Firewall in OSX.",
          "value" : "Verify firewall settings are as restrictive as you need. Identify unwanted firewall holes made by malware or humans"
        },
        "alf_services": {
          "query" : "select * from alf_services;",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves the services for the Application Layer Firewall in OSX.",
          "value" : "Verify firewall settings are as restrictive as you need. Identify unwanted firewall holes made by malware or humans"
        },
        "alf_explicit_auths": {
          "query" : "select * from alf_explicit_auths;",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves the list of processes with explicit authorization for the Application Layer Firewall.",
          "value" : "Verify firewall settings are as restrictive as you need. Identify unwanted firewall holes made by malware or humans"
        },
        "etc_hosts": {
          "query" : "select * from etc_hosts;",
          "interval" : "86400",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves all the entries in the target system /etc/hosts file.",
          "value" : "Identify network communications that are being redirected. Example: identify if security logging has been disabled"
        },
        "kextstat": {
          "query" : "select * from kernel_extensions;",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves all the information about the current kernel extensions for the target OSX system.",
          "value" : "Identify malware that has a kernel extension component."
        },
        "kernel_modules": {
          "query" : "select * from kernel_modules;",
          "interval" : "300",
          "platform" : "linux",
          "version" : "1.4.5",
          "description" : "Retrieves all the information for the current kernel modules in the target Linux system.",
          "value" : "Identify malware that has a kernel module component."
        },
        "last": {
          "query" : "select * from last;",
          "interval" : "300",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves the list of the latest logins with PID, username and timestamp.",
          "value" : "Useful for intrusion detection and incident response. Verify assumptions of what accounts should be accessing what systems and identify machines accessed during a compromise."
        },
        "installed_applications": {
          "query" : "select * from apps;",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves all the currently installed applications in the target OSX system.",
          "value" : "Identify malware, adware, or vulnerable packages that are installed as an application."
        },
        "open_sockets": {
          "query" : "select distinct pid, family, protocol, local_address, local_port, remote_address, remote_port, path from process_open_sockets where path <> '' or remote_address <> '';",
          "interval" : "86400",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves all the open sockets per process in the target system.",
          "value" : "Identify malware via connections to known bad IP addresses as well as odd local or remote port bindings"
        },
        "open_files": {
          "query" : "select distinct pid, path from process_open_files where path not like '/private/var/folders%' and path not like '/System/Library/%' and path not in ('/dev/null', '/dev/urandom', '/dev/random');",
          "interval" : "86400",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves all the open files per process in the target system.",
          "value" : "Identify processes accessing sensitive files they shouldn't"
        },
        "logged_in_users": {
          "query" : "select liu.*, p.name, p.cmdline, p.cwd, p.root from logged_in_users liu, processes p where liu.pid = p.pid;",
          "interval" : "300",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves the list of all the currently logged in users in the target system.",
          "value" : "Useful for intrusion detection and incident response. Verify assumptions of what accounts should be accessing what systems and identify machines accessed during a compromise."
        },
        "ip_forwarding": {
          "query" : "select * from system_controls where oid = '4.30.41.1' union select * from system_controls where oid = '4.2.0.1';",
          "interval" : "300",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves the current status of IP/IPv6 forwarding.",
          "value" : "Identify if a machine is being used as relay."
        },
        "process_env": {
          "query" : "select * from process_envs;",
          "interval" : "86400",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves all the environment variables per process in the target system.",
          "value" : "Insight into the process data: Where was it started from, was it preloaded..."
        },
        "mounts": {
          "query" : "select * from mounts;",
          "interval" : "300",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves the current list of mounted drives in the target system.",
          "value" : "Scope for lateral movement. Potential exfiltration locations. Potential dormant backdoors."
        },
        "nfs_shares": {
          "query" : "select * from nfs_shares;",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves the current list of Network File System mounted shares.",
          "value" : "Scope for lateral movement. Potential exfiltration locations. Potential dormant backdoors."
        },
        "shell_history": {
          "query" : "select * from users join shell_history using (uid);",
          "interval" : "300",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves the command history, per user, by parsing the shell history files.",
          "value" : "Identify actions taken. Useful for compromised hosts."
        },
        "recent_items": {
          "query" : "select username, key, value from plist p, (select * from users where directory like '/Users/%') u where p.path = u.directory || '/Library/Preferences/com.apple.recentitems.plist';",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.4.5",
          "description" : "Retrieves the list of recent items opened in OSX by parsing the plist per user.",
          "value" : "Identify recently accessed items. Useful for compromised hosts."
        },
        "ramdisk": {
          "query" : "select * from block_devices where type = 'Virtual Interface';",
          "interval" : "300",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves all the ramdisk currently mounted in the target system.",
          "value" : "Identify if an attacker is using temporary, memory storage to avoid touching disk for anti-forensics purposes"
        },
        "listening_ports": {
          "query" : "select * from listening_ports;",
          "interval" : "300",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves all the listening ports in the target system.",
          "value" : "Detect if a listening port iis not mapped to a known process. Find backdoors."
        },
        "suid_bin": {
          "query" : "select * from suid_bin;",
          "interval" : "300",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves all the files in the target system that are setuid enabled.",
          "value" : "Detect backdoor binaries (attacker may drop a copy of /bin/sh). Find potential elevation points / vulnerabilities in the standard build."
        },
        "process_memory": {
          "query" : "select * from process_memory_map;",
          "interval" : "86400",
          "platform" : "linux",
          "version" : "1.4.5",
          "description" : "Retrieves the memory map per process in the target Linux system.",
          "value" : "Ability to compare with known good. Identify mapped regions corresponding with or containing injected code."
        },
        "arp_cache": {
          "query" : "select * from arp_cache;",
          "interval" : "300",
          "version" : "1.4.5",
          "description" : "Retrieves the ARP cache values in the target system.",
          "value" : "Determine if MITM in progress."
        },
        "wireless_networks": {
          "query" : "select ssid, network_name, security_type, last_connected, captive_portal, possibly_hidden, roaming, roaming_profile from wifi_networks;",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.6.0",
          "description" : "Retrieves all the remembered wireless network that the target machine has connected to.",
          "value" : "Identifies connections to rogue access points."
        },
        "disk_encryption": {
          "query" : "select * from disk_encryption;",
          "interval" : "86400",
          "platform": "posix",
          "version" : "1.4.5",
          "description" : "Retrieves the current disk encryption status for the target system.",
          "value" : "Identifies a system potentially vulnerable to disk cloning."
        },
        "iptables": {
          "query" : "select * from iptables;",
          "interval" : "300",
          "platform" : "linux",
          "version" : "1.4.5",
          "description" : "Retrieves the current filters and chains per filter in the target system.",
          "value" : "Verify firewall settings are as restrictive as you need. Identify unwanted firewall holes made by malware or humans"
        },
        "app_schemes": {
          "query" : "select * from app_schemes;",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.4.7",
          "description" : "Retrieves the list of application scheme/protocol-based IPC handlers.",
          "value" : "Post-priori hijack detection, detect potential sensitive information leakage."
        },
        "sandboxes": {
          "query" : "select * from sandboxes;",
          "interval" : "300",
          "platform" : "darwin",
          "version" : "1.4.7",
          "description" : "Lists the application bundle that owns a sandbox label.",
          "value" : "Post-priori hijack detection, detect potential sensitive information leakage."
        }
      }
    }
  fim.conf: |
    {
      "queries": {
        "file_events": {
          "query": "SELECT * FROM file_events;",
          "removed": false,
          "interval": 20
        }
      },
      "file_paths": {
        "homes": [
          "/root/.ssh/%%",
          "/home/%/.ssh/%%"
        ],
          "home": [
          "/home/%%"
        ],
          "tmp": [
          "/tmp/%%"
        ],
          "etc-kub": [
          "/etc/kubernetes/%%"
        ],
          "etc-systemd": [
          "/etc/systemd/system/%%"
        ],
          "var-kubelet": [
          "/var/lib/kubelet/%%"
        ]
      },
      "exclude_paths": {
        "pods": [
          "/var/lib/kubelet/pods/%%"
        ],
        "runc": [
          "/tmp/%runc-process"
        ],
        "gc": [
          "/tmp/%google-accounts"
        ]
      }
    }